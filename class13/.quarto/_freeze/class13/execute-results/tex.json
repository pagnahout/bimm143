{
  "hash": "9788264b5a8777cbfe91b8af05c1f49f",
  "result": {
    "markdown": "---\ntitle: \"Class 13: RNA-Seq Analysis Mini-Project\"\nauthor: Pagna Hout\ndate: 2023/05/18\nformat: pdf\n---\n\n\n# Section 1. Differential Expression Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DESeq2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: S4Vectors\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: stats4\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: BiocGenerics\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'BiocGenerics'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort,\n    table, tapply, union, unique, unsplit, which.max, which.min\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'S4Vectors'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: IRanges\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: GenomicRanges\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: GenomeInfoDb\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: SummarizedExperiment\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: MatrixGenerics\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: matrixStats\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'MatrixGenerics'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: Biobase\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'Biobase'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n```\n:::\n\n```{.r .cell-code}\nmetaFile <- \"GSE37704_metadata.csv\"\ncountFile <- \"GSE37704_featurecounts.csv\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import metadata and take a peak\ncolData = read.csv(metaFile, row.names=1)\nhead(colData)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              condition\nSRR493366 control_sirna\nSRR493367 control_sirna\nSRR493368 control_sirna\nSRR493369      hoxa1_kd\nSRR493370      hoxa1_kd\nSRR493371      hoxa1_kd\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import countdata\ncountData = read.csv(countFile, row.names=1)\nhead(countData)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                length SRR493366 SRR493367 SRR493368 SRR493369 SRR493370\nENSG00000186092    918         0         0         0         0         0\nENSG00000279928    718         0         0         0         0         0\nENSG00000279457   1982        23        28        29        29        28\nENSG00000278566    939         0         0         0         0         0\nENSG00000273547    939         0         0         0         0         0\nENSG00000187634   3214       124       123       205       207       212\n                SRR493371\nENSG00000186092         0\nENSG00000279928         0\nENSG00000279457        46\nENSG00000278566         0\nENSG00000273547         0\nENSG00000187634       258\n```\n:::\n:::\n\n\n### **Q1**. Complete the code below to remove the troublesome first column from `countData`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Note we need to remove the odd first $length col\ncountData <- as.matrix(countData[,-1])\nhead(countData)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                SRR493366 SRR493367 SRR493368 SRR493369 SRR493370 SRR493371\nENSG00000186092         0         0         0         0         0         0\nENSG00000279928         0         0         0         0         0         0\nENSG00000279457        23        28        29        29        28        46\nENSG00000278566         0         0         0         0         0         0\nENSG00000273547         0         0         0         0         0         0\nENSG00000187634       124       123       205       207       212       258\n```\n:::\n:::\n\n\n### **Q2**. Complete the code below to filter `countData` to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter count data where you have 0 read count across all samples.\ncountData = countData[rowSums(countData)>0, ]\nhead(countData)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                SRR493366 SRR493367 SRR493368 SRR493369 SRR493370 SRR493371\nENSG00000279457        23        28        29        29        28        46\nENSG00000187634       124       123       205       207       212       258\nENSG00000188976      1637      1831      2383      1226      1326      1504\nENSG00000187961       120       153       180       236       255       357\nENSG00000187583        24        48        65        44        48        64\nENSG00000187642         4         9        16        14        16        16\n```\n:::\n:::\n\n\n## Running DESeq2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndds = DESeqDataSetFromMatrix(countData=countData,\n                             colData=colData,\n                             design=~condition)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in DESeqDataSet(se, design = design, ignoreRank): some variables in\ndesign formula are characters, converting to factors\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndds = DESeq(dds)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nestimating size factors\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nestimating dispersions\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ngene-wise dispersion estimates\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nmean-dispersion relationship\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nfinal dispersion estimates\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nfitting model and testing\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndds\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nclass: DESeqDataSet \ndim: 15975 6 \nmetadata(1): version\nassays(4): counts mu H cooks\nrownames(15975): ENSG00000279457 ENSG00000187634 ... ENSG00000276345\n  ENSG00000271254\nrowData names(22): baseMean baseVar ... deviance maxCooks\ncolnames(6): SRR493366 SRR493367 ... SRR493370 SRR493371\ncolData names(2): condition sizeFactor\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nres = results(dds, contrast =c(\"condition\", \"hoxa1_kd\", \"control_sirna\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nres\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlog2 fold change (MLE): condition hoxa1_kd vs control_sirna \nWald test p-value: condition hoxa1 kd vs control sirna \nDataFrame with 15975 rows and 6 columns\n                 baseMean log2FoldChange     lfcSE       stat      pvalue\n                <numeric>      <numeric> <numeric>  <numeric>   <numeric>\nENSG00000279457   29.9136      0.1792571 0.3248216   0.551863 5.81042e-01\nENSG00000187634  183.2296      0.4264571 0.1402658   3.040350 2.36304e-03\nENSG00000188976 1651.1881     -0.6927205 0.0548465 -12.630158 1.43989e-36\nENSG00000187961  209.6379      0.7297556 0.1318599   5.534326 3.12428e-08\nENSG00000187583   47.2551      0.0405765 0.2718928   0.149237 8.81366e-01\n...                   ...            ...       ...        ...         ...\nENSG00000273748  35.30265       0.674387  0.303666   2.220817 2.63633e-02\nENSG00000278817   2.42302      -0.388988  1.130394  -0.344117 7.30758e-01\nENSG00000278384   1.10180       0.332991  1.660261   0.200565 8.41039e-01\nENSG00000276345  73.64496      -0.356181  0.207716  -1.714752 8.63908e-02\nENSG00000271254 181.59590      -0.609667  0.141320  -4.314071 1.60276e-05\n                       padj\n                  <numeric>\nENSG00000279457 6.86555e-01\nENSG00000187634 5.15718e-03\nENSG00000188976 1.76549e-35\nENSG00000187961 1.13413e-07\nENSG00000187583 9.19031e-01\n...                     ...\nENSG00000273748 4.79091e-02\nENSG00000278817 8.09772e-01\nENSG00000278384 8.92654e-01\nENSG00000276345 1.39762e-01\nENSG00000271254 4.53648e-05\n```\n:::\n:::\n\n\n### **Q3**. Call the **summary()** function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(res)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nout of 15975 with nonzero total read count\nadjusted p-value < 0.1\nLFC > 0 (up)       : 4349, 27%\nLFC < 0 (down)     : 4396, 28%\noutliers [1]       : 0, 0%\nlow counts [2]     : 1237, 7.7%\n(mean count < 0)\n[1] see 'cooksCutoff' argument of ?results\n[2] see 'independentFiltering' argument of ?results\n```\n:::\n:::\n\n\n## Volcano plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot( res$log2FoldChange, -log(res$padj) )\n```\n\n::: {.cell-output-display}\n![](class13_files/figure-pdf/unnamed-chunk-12-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n### **Q4**. Improve this plot by completing the below code, which adds color and axis labels\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make a color vector for all genes\nmycols <- rep(\"gray\", nrow(res) )\n\n# Color red the genes with absolute fold change above 2\nmycols[ abs(res$log2FoldChange) > 2 ] <- \"red\"\n\n# Color blue those with adjusted p-value less than 0.01\n#  and absolute fold change more than 2\ninds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )\nmycols[ inds ] <- \"blue\"\n\nplot( res$log2FoldChange, -log(res$padj), col=mycols, xlab=\"Log2(FoldChange)\", ylab=\"-Log(P-value)\" )\n```\n\n::: {.cell-output-display}\n![](class13_files/figure-pdf/unnamed-chunk-13-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n## Adding gene annotation\n\n### **Q5**. Use the **mapIDs()** function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"AnnotationDbi\")\nlibrary(\"org.Hs.eg.db\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n```{.r .cell-code}\ncolumns(org.Hs.eg.db)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"ACCNUM\"       \"ALIAS\"        \"ENSEMBL\"      \"ENSEMBLPROT\"  \"ENSEMBLTRANS\"\n [6] \"ENTREZID\"     \"ENZYME\"       \"EVIDENCE\"     \"EVIDENCEALL\"  \"GENENAME\"    \n[11] \"GENETYPE\"     \"GO\"           \"GOALL\"        \"IPI\"          \"MAP\"         \n[16] \"OMIM\"         \"ONTOLOGY\"     \"ONTOLOGYALL\"  \"PATH\"         \"PFAM\"        \n[21] \"PMID\"         \"PROSITE\"      \"REFSEQ\"       \"SYMBOL\"       \"UCSCKG\"      \n[26] \"UNIPROT\"     \n```\n:::\n\n```{.r .cell-code}\nres$symbol = mapIds(org.Hs.eg.db,\n                    keys=row.names(res), \n                    keytype=\"ENSEMBL\",\n                    column=\"SYMBOL\",\n                    multiVals=\"first\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:many mapping between keys and columns\n```\n:::\n\n```{.r .cell-code}\nres$entrez = mapIds(org.Hs.eg.db,\n                    keys=row.names(res),\n                    keytype=\"ENSEMBL\",\n                    column=\"ENTREZID\",\n                    multiVals=\"first\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:many mapping between keys and columns\n```\n:::\n\n```{.r .cell-code}\nres$name =   mapIds(org.Hs.eg.db,\n                    keys=row.names(res),\n                    keytype=\"ENSEMBL\",\n                    column=\"GENENAME\",\n                    multiVals=\"first\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:many mapping between keys and columns\n```\n:::\n\n```{.r .cell-code}\nhead(res, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlog2 fold change (MLE): condition hoxa1_kd vs control_sirna \nWald test p-value: condition hoxa1 kd vs control sirna \nDataFrame with 10 rows and 9 columns\n                   baseMean log2FoldChange     lfcSE       stat      pvalue\n                  <numeric>      <numeric> <numeric>  <numeric>   <numeric>\nENSG00000279457   29.913579      0.1792571 0.3248216   0.551863 5.81042e-01\nENSG00000187634  183.229650      0.4264571 0.1402658   3.040350 2.36304e-03\nENSG00000188976 1651.188076     -0.6927205 0.0548465 -12.630158 1.43989e-36\nENSG00000187961  209.637938      0.7297556 0.1318599   5.534326 3.12428e-08\nENSG00000187583   47.255123      0.0405765 0.2718928   0.149237 8.81366e-01\nENSG00000187642   11.979750      0.5428105 0.5215599   1.040744 2.97994e-01\nENSG00000188290  108.922128      2.0570638 0.1969053  10.446970 1.51282e-25\nENSG00000187608  350.716868      0.2573837 0.1027266   2.505522 1.22271e-02\nENSG00000188157 9128.439422      0.3899088 0.0467163   8.346304 7.04321e-17\nENSG00000237330    0.158192      0.7859552 4.0804729   0.192614 8.47261e-01\n                       padj      symbol      entrez                   name\n                  <numeric> <character> <character>            <character>\nENSG00000279457 6.86555e-01          NA          NA                     NA\nENSG00000187634 5.15718e-03      SAMD11      148398 sterile alpha motif ..\nENSG00000188976 1.76549e-35       NOC2L       26155 NOC2 like nucleolar ..\nENSG00000187961 1.13413e-07      KLHL17      339451 kelch like family me..\nENSG00000187583 9.19031e-01     PLEKHN1       84069 pleckstrin homology ..\nENSG00000187642 4.03379e-01       PERM1       84808 PPARGC1 and ESRR ind..\nENSG00000188290 1.30538e-24        HES4       57801 hes family bHLH tran..\nENSG00000187608 2.37452e-02       ISG15        9636 ISG15 ubiquitin like..\nENSG00000188157 4.21963e-16        AGRN      375790                  agrin\nENSG00000237330          NA      RNF223      401934 ring finger protein ..\n```\n:::\n:::\n\n\n### **Q6**. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres = res[order(res$pvalue),]\nwrite.csv(res, file=\"deseq_results.csv\")\n```\n:::\n\n\n# Section 2. Pathway Analysis\n\n## KEGG pathways\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pathview)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n##############################################################################\nPathview is an open source software package distributed under GNU General\nPublic License version 3 (GPLv3). Details of GPLv3 is available at\nhttp://www.gnu.org/licenses/gpl-3.0.html. Particullary, users are required to\nformally cite the original Pathview paper (not just mention it) in publications\nor products. For details, do citation(\"pathview\") within R.\n\nThe pathview downloads and uses KEGG data. Non-academic uses may require a KEGG\nlicense agreement (details at http://www.kegg.jp/kegg/legal.html).\n##############################################################################\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gage)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gageData)\n\ndata(kegg.sets.hs)\ndata(sigmet.idx.hs)\n\n# Focus on signaling and metabolic pathways only\nkegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]\n\n# Examine the first 3 pathways\nhead(kegg.sets.hs, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`hsa00232 Caffeine metabolism`\n[1] \"10\"   \"1544\" \"1548\" \"1549\" \"1553\" \"7498\" \"9\"   \n\n$`hsa00983 Drug metabolism - other enzymes`\n [1] \"10\"     \"1066\"   \"10720\"  \"10941\"  \"151531\" \"1548\"   \"1549\"   \"1551\"  \n [9] \"1553\"   \"1576\"   \"1577\"   \"1806\"   \"1807\"   \"1890\"   \"221223\" \"2990\"  \n[17] \"3251\"   \"3614\"   \"3615\"   \"3704\"   \"51733\"  \"54490\"  \"54575\"  \"54576\" \n[25] \"54577\"  \"54578\"  \"54579\"  \"54600\"  \"54657\"  \"54658\"  \"54659\"  \"54963\" \n[33] \"574537\" \"64816\"  \"7083\"   \"7084\"   \"7172\"   \"7363\"   \"7364\"   \"7365\"  \n[41] \"7366\"   \"7367\"   \"7371\"   \"7372\"   \"7378\"   \"7498\"   \"79799\"  \"83549\" \n[49] \"8824\"   \"8833\"   \"9\"      \"978\"   \n\n$`hsa00230 Purine metabolism`\n  [1] \"100\"    \"10201\"  \"10606\"  \"10621\"  \"10622\"  \"10623\"  \"107\"    \"10714\" \n  [9] \"108\"    \"10846\"  \"109\"    \"111\"    \"11128\"  \"11164\"  \"112\"    \"113\"   \n [17] \"114\"    \"115\"    \"122481\" \"122622\" \"124583\" \"132\"    \"158\"    \"159\"   \n [25] \"1633\"   \"171568\" \"1716\"   \"196883\" \"203\"    \"204\"    \"205\"    \"221823\"\n [33] \"2272\"   \"22978\"  \"23649\"  \"246721\" \"25885\"  \"2618\"   \"26289\"  \"270\"   \n [41] \"271\"    \"27115\"  \"272\"    \"2766\"   \"2977\"   \"2982\"   \"2983\"   \"2984\"  \n [49] \"2986\"   \"2987\"   \"29922\"  \"3000\"   \"30833\"  \"30834\"  \"318\"    \"3251\"  \n [57] \"353\"    \"3614\"   \"3615\"   \"3704\"   \"377841\" \"471\"    \"4830\"   \"4831\"  \n [65] \"4832\"   \"4833\"   \"4860\"   \"4881\"   \"4882\"   \"4907\"   \"50484\"  \"50940\" \n [73] \"51082\"  \"51251\"  \"51292\"  \"5136\"   \"5137\"   \"5138\"   \"5139\"   \"5140\"  \n [81] \"5141\"   \"5142\"   \"5143\"   \"5144\"   \"5145\"   \"5146\"   \"5147\"   \"5148\"  \n [89] \"5149\"   \"5150\"   \"5151\"   \"5152\"   \"5153\"   \"5158\"   \"5167\"   \"5169\"  \n [97] \"51728\"  \"5198\"   \"5236\"   \"5313\"   \"5315\"   \"53343\"  \"54107\"  \"5422\"  \n[105] \"5424\"   \"5425\"   \"5426\"   \"5427\"   \"5430\"   \"5431\"   \"5432\"   \"5433\"  \n[113] \"5434\"   \"5435\"   \"5436\"   \"5437\"   \"5438\"   \"5439\"   \"5440\"   \"5441\"  \n[121] \"5471\"   \"548644\" \"55276\"  \"5557\"   \"5558\"   \"55703\"  \"55811\"  \"55821\" \n[129] \"5631\"   \"5634\"   \"56655\"  \"56953\"  \"56985\"  \"57804\"  \"58497\"  \"6240\"  \n[137] \"6241\"   \"64425\"  \"646625\" \"654364\" \"661\"    \"7498\"   \"8382\"   \"84172\" \n[145] \"84265\"  \"84284\"  \"84618\"  \"8622\"   \"8654\"   \"87178\"  \"8833\"   \"9060\"  \n[153] \"9061\"   \"93034\"  \"953\"    \"9533\"   \"954\"    \"955\"    \"956\"    \"957\"   \n[161] \"9583\"   \"9615\"  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfoldchanges = res$log2FoldChange\nnames(foldchanges) = res$entrez\nhead(foldchanges)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     1266     54855      1465     51232      2034      2317 \n-2.422719  3.201955 -2.313738 -2.059631 -1.888019 -1.649792 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get the results\nkeggres = gage(foldchanges, gsets=kegg.sets.hs)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes(keggres)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$names\n[1] \"greater\" \"less\"    \"stats\"  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Look at the first few down (less) pathways\nhead(keggres$less)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                         p.geomean stat.mean        p.val\nhsa04110 Cell cycle                   8.995727e-06 -4.378644 8.995727e-06\nhsa03030 DNA replication              9.424076e-05 -3.951803 9.424076e-05\nhsa03013 RNA transport                1.375901e-03 -3.028500 1.375901e-03\nhsa03440 Homologous recombination     3.066756e-03 -2.852899 3.066756e-03\nhsa04114 Oocyte meiosis               3.784520e-03 -2.698128 3.784520e-03\nhsa00010 Glycolysis / Gluconeogenesis 8.961413e-03 -2.405398 8.961413e-03\n                                            q.val set.size         exp1\nhsa04110 Cell cycle                   0.001448312      121 8.995727e-06\nhsa03030 DNA replication              0.007586381       36 9.424076e-05\nhsa03013 RNA transport                0.073840037      144 1.375901e-03\nhsa03440 Homologous recombination     0.121861535       28 3.066756e-03\nhsa04114 Oocyte meiosis               0.121861535      102 3.784520e-03\nhsa00010 Glycolysis / Gluconeogenesis 0.212222694       53 8.961413e-03\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npathview(gene.data=foldchanges, pathway.id=\"hsa04110\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:1 mapping between keys and columns\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Working in directory /Users/pagnahout/Desktop/BIMM 143/class13\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Writing image file hsa04110.pathview.png\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# A different PDF based output of the same data\npathview(gene.data=foldchanges, pathway.id=\"hsa04110\", kegg.native=FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:1 mapping between keys and columns\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: reconcile groups sharing member nodes!\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] \n[1,] \"9\"  \"300\"\n[2,] \"9\"  \"306\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Working in directory /Users/pagnahout/Desktop/BIMM 143/class13\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Writing image file hsa04110.pathview.pdf\n```\n:::\n:::\n\n\n### **Q7**. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Focus on top 5 downregulated pathways\nkeggrespathways <- rownames(keggres$less)[1:5]\n\n# Extract the 8 character long IDs part of each string\nkeggresids = substr(keggrespathways, start=1, stop=8)\nkeggresids\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"hsa04110\" \"hsa03030\" \"hsa03013\" \"hsa03440\" \"hsa04114\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npathview(gene.data=foldchanges, pathway.id=keggresids, species=\"hsa\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:1 mapping between keys and columns\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Working in directory /Users/pagnahout/Desktop/BIMM 143/class13\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Writing image file hsa04110.pathview.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:1 mapping between keys and columns\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Working in directory /Users/pagnahout/Desktop/BIMM 143/class13\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Writing image file hsa03030.pathview.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:1 mapping between keys and columns\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Working in directory /Users/pagnahout/Desktop/BIMM 143/class13\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Writing image file hsa03013.pathview.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:1 mapping between keys and columns\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Working in directory /Users/pagnahout/Desktop/BIMM 143/class13\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Writing image file hsa03440.pathview.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:1 mapping between keys and columns\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Working in directory /Users/pagnahout/Desktop/BIMM 143/class13\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nInfo: Writing image file hsa04114.pathview.png\n```\n:::\n:::\n\n\n# Section 3. Gene Ontology (GO)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(go.sets.hs)\ndata(go.subs.hs)\n\n# Focus on Biological Process subset of GO\ngobpsets = go.sets.hs[go.subs.hs$BP]\n\ngobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)\n\nlapply(gobpres, head)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$greater\n                                             p.geomean stat.mean        p.val\nGO:0007156 homophilic cell adhesion       8.519724e-05  3.824205 8.519724e-05\nGO:0002009 morphogenesis of an epithelium 1.396681e-04  3.653886 1.396681e-04\nGO:0048729 tissue morphogenesis           1.432451e-04  3.643242 1.432451e-04\nGO:0007610 behavior                       2.195494e-04  3.530241 2.195494e-04\nGO:0060562 epithelial tube morphogenesis  5.932837e-04  3.261376 5.932837e-04\nGO:0035295 tube development               5.953254e-04  3.253665 5.953254e-04\n                                              q.val set.size         exp1\nGO:0007156 homophilic cell adhesion       0.1951953      113 8.519724e-05\nGO:0002009 morphogenesis of an epithelium 0.1951953      339 1.396681e-04\nGO:0048729 tissue morphogenesis           0.1951953      424 1.432451e-04\nGO:0007610 behavior                       0.2243795      427 2.195494e-04\nGO:0060562 epithelial tube morphogenesis  0.3711390      257 5.932837e-04\nGO:0035295 tube development               0.3711390      391 5.953254e-04\n\n$less\n                                            p.geomean stat.mean        p.val\nGO:0048285 organelle fission             1.536227e-15 -8.063910 1.536227e-15\nGO:0000280 nuclear division              4.286961e-15 -7.939217 4.286961e-15\nGO:0007067 mitosis                       4.286961e-15 -7.939217 4.286961e-15\nGO:0000087 M phase of mitotic cell cycle 1.169934e-14 -7.797496 1.169934e-14\nGO:0007059 chromosome segregation        2.028624e-11 -6.878340 2.028624e-11\nGO:0000236 mitotic prometaphase          1.729553e-10 -6.695966 1.729553e-10\n                                                q.val set.size         exp1\nGO:0048285 organelle fission             5.841698e-12      376 1.536227e-15\nGO:0000280 nuclear division              5.841698e-12      352 4.286961e-15\nGO:0007067 mitosis                       5.841698e-12      352 4.286961e-15\nGO:0000087 M phase of mitotic cell cycle 1.195672e-11      362 1.169934e-14\nGO:0007059 chromosome segregation        1.658603e-08      142 2.028624e-11\nGO:0000236 mitotic prometaphase          1.178402e-07       84 1.729553e-10\n\n$stats\n                                          stat.mean     exp1\nGO:0007156 homophilic cell adhesion        3.824205 3.824205\nGO:0002009 morphogenesis of an epithelium  3.653886 3.653886\nGO:0048729 tissue morphogenesis            3.643242 3.643242\nGO:0007610 behavior                        3.530241 3.530241\nGO:0060562 epithelial tube morphogenesis   3.261376 3.261376\nGO:0035295 tube development                3.253665 3.253665\n```\n:::\n:::\n\n\n# Section 4. Reactome Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), \"symbol\"]\nprint(paste(\"Total number of significant genes:\", length(sig_genes)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Total number of significant genes: 8147\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.table(sig_genes, file=\"significant_genes.txt\", row.names=FALSE, col.names=FALSE, quote=FALSE)\n```\n:::\n\n\n### **Q8**: What pathway has the most significant \\\"Entities p-value\\\"? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?\n\nThe CNN3 has the most significant \"Entities p-values\". The pathways do not match with my previous KEGG results. The differences might be caused by differences in database content, or statistical approaches.\n",
    "supporting": [
      "class13_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}