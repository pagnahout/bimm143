{
  "hash": "ef47e3ac622e5a602c23bbdb7e34cb49",
  "result": {
    "markdown": "---\ntitle: \"Class 8: Mini-Project\"\nauthor: Pagna Hout\ndate: 2023-04-28\nformat: pdf\n---\n\n\n#### Preparing the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfna.data <- \"WisconsinCancer.csv\"\nwisc.df <- read.csv(fna.data, row.names=1)\n\n# We can use -1 here to remove the first column\nwisc.data <- wisc.df[,-1]\n\n# Create diagnosis vector for later \nwisc.df$diagnosis\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n [19] \"M\" \"B\" \"B\" \"B\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n [37] \"M\" \"B\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\"\n [55] \"M\" \"B\" \"M\" \"M\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"M\" \"M\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\"\n [73] \"M\" \"M\" \"B\" \"M\" \"B\" \"M\" \"M\" \"B\" \"B\" \"B\" \"M\" \"M\" \"B\" \"M\" \"M\" \"M\" \"B\" \"B\"\n [91] \"B\" \"M\" \"B\" \"B\" \"M\" \"M\" \"B\" \"B\" \"B\" \"M\" \"M\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\"\n[109] \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"M\" \"M\" \"B\" \"M\" \"M\" \"B\" \"B\" \"B\"\n[127] \"M\" \"M\" \"B\" \"M\" \"B\" \"M\" \"M\" \"B\" \"M\" \"M\" \"B\" \"B\" \"M\" \"B\" \"B\" \"M\" \"B\" \"B\"\n[145] \"B\" \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"M\"\n[163] \"M\" \"B\" \"M\" \"B\" \"B\" \"M\" \"M\" \"B\" \"B\" \"M\" \"M\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\"\n[181] \"M\" \"M\" \"M\" \"B\" \"M\" \"B\" \"M\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\" \"M\" \"M\" \"B\" \"M\" \"M\"\n[199] \"M\" \"M\" \"B\" \"M\" \"M\" \"M\" \"B\" \"M\" \"B\" \"M\" \"B\" \"B\" \"M\" \"B\" \"M\" \"M\" \"M\" \"M\"\n[217] \"B\" \"B\" \"M\" \"M\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"M\" \"B\" \"B\" \"M\"\n[235] \"B\" \"B\" \"M\" \"M\" \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\"\n[253] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"B\" \"B\" \"B\" \"B\"\n[271] \"B\" \"B\" \"M\" \"B\" \"M\" \"B\" \"B\" \"M\" \"B\" \"B\" \"M\" \"B\" \"M\" \"M\" \"B\" \"B\" \"B\" \"B\"\n[289] \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\" \"M\" \"B\" \"M\" \"B\" \"B\" \"B\"\n[307] \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\" \"B\" \"M\" \"B\" \"M\"\n[325] \"B\" \"B\" \"B\" \"B\" \"M\" \"M\" \"M\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"M\" \"B\" \"M\" \"B\" \"B\"\n[343] \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"M\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\"\n[361] \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"M\" \"B\" \"M\" \"M\" \"M\" \"B\" \"M\" \"M\" \"B\" \"B\" \"B\" \"B\"\n[379] \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\" \"M\" \"M\" \"B\" \"B\"\n[397] \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\"\n[415] \"M\" \"B\" \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\"\n[433] \"M\" \"M\" \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\" \"M\" \"B\" \"M\" \"B\" \"B\" \"M\"\n[451] \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\"\n[469] \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\"\n[487] \"B\" \"M\" \"B\" \"M\" \"B\" \"B\" \"M\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"M\" \"B\" \"M\" \"B\" \"M\"\n[505] \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"B\" \"M\" \"B\" \"M\" \"B\" \"M\" \"M\" \"B\" \"B\" \"B\" \"M\"\n[523] \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"M\" \"B\" \"M\" \"M\" \"B\" \"B\" \"B\"\n[541] \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\"\n[559] \"B\" \"B\" \"B\" \"B\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"B\"\n```\n:::\n\n```{.r .cell-code}\ndiagnosis <- wisc.df[,1]\n```\n:::\n\n\n#### Exploring data analysis\n\n-   **Q1**. How many observations are in this dataset?\n\n    This dataset has 569 observations.\n\n-   **Q2**. How many of the observations have a malignant diagnosis?\n\n    There are 212 observations with malignant diagnosis.\n\n-   **Q3**. How many variables/features in the data are suffixed with `_mean`?\n\n    There are 10 variables in the data with suffix \"\\_mean\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#1\nnrow(wisc.df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 569\n```\n:::\n\n```{.r .cell-code}\n#2\ntable(diagnosis)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ndiagnosis\n  B   M \n357 212 \n```\n:::\n\n```{.r .cell-code}\n#3\nlength(grep(\"_mean\", colnames(wisc.df)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n:::\n\n\n#### Performing PCA\n\nCheck the mean and standard deviation of the features (i.e.Â columns) of the `wisc.data` to determine if the data should be scaled. Use the `colMeans()` and `apply()` functions like you\\'ve done before.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check column means and standard deviations\ncolMeans(wisc.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            radius_mean            texture_mean          perimeter_mean \n           1.412729e+01            1.928965e+01            9.196903e+01 \n              area_mean         smoothness_mean        compactness_mean \n           6.548891e+02            9.636028e-02            1.043410e-01 \n         concavity_mean     concave.points_mean           symmetry_mean \n           8.879932e-02            4.891915e-02            1.811619e-01 \n fractal_dimension_mean               radius_se              texture_se \n           6.279761e-02            4.051721e-01            1.216853e+00 \n           perimeter_se                 area_se           smoothness_se \n           2.866059e+00            4.033708e+01            7.040979e-03 \n         compactness_se            concavity_se       concave.points_se \n           2.547814e-02            3.189372e-02            1.179614e-02 \n            symmetry_se    fractal_dimension_se            radius_worst \n           2.054230e-02            3.794904e-03            1.626919e+01 \n          texture_worst         perimeter_worst              area_worst \n           2.567722e+01            1.072612e+02            8.805831e+02 \n       smoothness_worst       compactness_worst         concavity_worst \n           1.323686e-01            2.542650e-01            2.721885e-01 \n   concave.points_worst          symmetry_worst fractal_dimension_worst \n           1.146062e-01            2.900756e-01            8.394582e-02 \n```\n:::\n\n```{.r .cell-code}\napply(wisc.data,2,sd)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            radius_mean            texture_mean          perimeter_mean \n           3.524049e+00            4.301036e+00            2.429898e+01 \n              area_mean         smoothness_mean        compactness_mean \n           3.519141e+02            1.406413e-02            5.281276e-02 \n         concavity_mean     concave.points_mean           symmetry_mean \n           7.971981e-02            3.880284e-02            2.741428e-02 \n fractal_dimension_mean               radius_se              texture_se \n           7.060363e-03            2.773127e-01            5.516484e-01 \n           perimeter_se                 area_se           smoothness_se \n           2.021855e+00            4.549101e+01            3.002518e-03 \n         compactness_se            concavity_se       concave.points_se \n           1.790818e-02            3.018606e-02            6.170285e-03 \n            symmetry_se    fractal_dimension_se            radius_worst \n           8.266372e-03            2.646071e-03            4.833242e+00 \n          texture_worst         perimeter_worst              area_worst \n           6.146258e+00            3.360254e+01            5.693570e+02 \n       smoothness_worst       compactness_worst         concavity_worst \n           2.283243e-02            1.573365e-01            2.086243e-01 \n   concave.points_worst          symmetry_worst fractal_dimension_worst \n           6.573234e-02            6.186747e-02            1.806127e-02 \n```\n:::\n:::\n\n\nExecute PCA with the `prcomp()` function on the `wisc.data`, scaling if appropriate, and assign the output model to `wisc.pr`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform PCA on wisc.data by completing the following code\nwisc.pr <- prcomp(wisc.data, scale = T)\n\nsummary(wisc.pr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nImportance of components:\n                          PC1    PC2     PC3     PC4     PC5     PC6     PC7\nStandard deviation     3.6444 2.3857 1.67867 1.40735 1.28403 1.09880 0.82172\nProportion of Variance 0.4427 0.1897 0.09393 0.06602 0.05496 0.04025 0.02251\nCumulative Proportion  0.4427 0.6324 0.72636 0.79239 0.84734 0.88759 0.91010\n                           PC8    PC9    PC10   PC11    PC12    PC13    PC14\nStandard deviation     0.69037 0.6457 0.59219 0.5421 0.51104 0.49128 0.39624\nProportion of Variance 0.01589 0.0139 0.01169 0.0098 0.00871 0.00805 0.00523\nCumulative Proportion  0.92598 0.9399 0.95157 0.9614 0.97007 0.97812 0.98335\n                          PC15    PC16    PC17    PC18    PC19    PC20   PC21\nStandard deviation     0.30681 0.28260 0.24372 0.22939 0.22244 0.17652 0.1731\nProportion of Variance 0.00314 0.00266 0.00198 0.00175 0.00165 0.00104 0.0010\nCumulative Proportion  0.98649 0.98915 0.99113 0.99288 0.99453 0.99557 0.9966\n                          PC22    PC23   PC24    PC25    PC26    PC27    PC28\nStandard deviation     0.16565 0.15602 0.1344 0.12442 0.09043 0.08307 0.03987\nProportion of Variance 0.00091 0.00081 0.0006 0.00052 0.00027 0.00023 0.00005\nCumulative Proportion  0.99749 0.99830 0.9989 0.99942 0.99969 0.99992 0.99997\n                          PC29    PC30\nStandard deviation     0.02736 0.01153\nProportion of Variance 0.00002 0.00000\nCumulative Proportion  1.00000 1.00000\n```\n:::\n:::\n\n\n-   **Q4**. From your results, what proportion of the original variance is captured by the first principal components (PC1)?\n\n    The proportion of the original variance is 0.44.\n\n-   **Q5**. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?\n\n    28 PCs are required to describe at least 70% of the original variance in the data.\n\n-   **Q6**. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?\n\n    24 PCs are required to describe at least 90% of the original variance in the data.\n\n#### Interpreting PCA results\n\nCreate a biplot of the `wisc.pr` using the `biplot()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbiplot(wisc.pr)\n```\n\n::: {.cell-output-display}\n![](class08_files/figure-pdf/unnamed-chunk-5-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n-   **Q7.** What stands out to you about this plot? Is it easy or difficult to understand? Why?\n\n    The plot looks quite messy and it is difficult to understand because the row names and column names are displayed on the plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatter plot observations by components 1 and 2\nplot( wisc.pr$x[,1:2] , col = as.factor(diagnosis) , \n     xlab = \"PC1\", ylab = \"PC2\")\n```\n\n::: {.cell-output-display}\n![](class08_files/figure-pdf/unnamed-chunk-6-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n**8.** Generate a similar plot for principal components 1 and 3. What do you notice about these plots?\n\nThe plots generated dots instead of the row names.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Repeat for components 1 and 3\nplot(wisc.pr$x[,1], wisc.pr$x[,3], col = as.factor(diagnosis), \n     xlab = \"PC1\", ylab = \"PC3\")\n```\n\n::: {.cell-output-display}\n![](class08_files/figure-pdf/unnamed-chunk-7-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a data.frame for ggplot\ndf <- as.data.frame(wisc.pr$x)\ndf$diagnosis <- diagnosis\n\n# Load the ggplot2 package\nlibrary(ggplot2)\n\n# Make a scatter plot colored by diagnosis\nggplot(df) + \n  aes(PC1, PC2, col=as.factor(diagnosis)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](class08_files/figure-pdf/unnamed-chunk-8-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n#### Variance explained\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate variance of each component\npr.var <- wisc.pr$sdev^2\nhead(pr.var)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 13.281608  5.691355  2.817949  1.980640  1.648731  1.207357\n```\n:::\n:::\n\n\nCalculate the variance explained by each principal component by dividing by the total variance explained of all principal components. Assign this to a variable called `pve` and create a plot of variance explained for each principal component.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Variance explained by each principal component: pve\npve <-  pr.var / sum(pr.var)\n\n# Plot variance explained for each principal component\nplot(pve, xlab = \"Principal Component\", \n     ylab = \"Proportion of Variance Explained\", \n     ylim = c(0, 1), type = \"o\")\n```\n\n::: {.cell-output-display}\n![](class08_files/figure-pdf/unnamed-chunk-10-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Alternative scree plot of the same data, note data driven y-axis\nbarplot(pve, ylab = \"Precent of Variance Explained\",\n     names.arg=paste0(\"PC\",1:length(pve)), las=2, axes = FALSE)\naxis(2, at=pve, labels=round(pve,2)*100 )\n```\n\n::: {.cell-output-display}\n![](class08_files/figure-pdf/unnamed-chunk-11-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n#### Communicating PCA results\n\n-   **Q9.** For the first principal component, what is the component of the loading vector (i.e.Â `wisc.pr$rotation[,1]`) for the feature `concave.points_mean`? This tells us how much this original feature contributes to the first PC.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwisc.pr$rotation[\"concave.points_mean\",1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.2608538\n```\n:::\n:::\n\n\n#### Hierarchical clustering\n\nFirst scale the `wisc.data` data and assign the result to `data.scaled`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scale the wisc.data data using the \"scale()\" function\ndata.scaled <- scale(wisc.data)\n```\n:::\n\n\nCalculate the (Euclidean) distances between all pairs of observations in the new scaled dataset and assign the result to `data.dist`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.dist <- dist (data.scaled)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwisc.hclust <- hclust(data.dist, method =\"complete\" )\n```\n:::\n\n\n#### Results of hierarchical clustering\n\n-   **Q10.** Using the `plot()` and `abline()` functions, what is the height at which the clustering model has 4 clusters?\n\n    The clustering model has 4 clusters at h=19.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(wisc.hclust)\nabline(h=19, col=\"red\", lty=2)\n```\n\n::: {.cell-output-display}\n![](class08_files/figure-pdf/unnamed-chunk-16-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n#### Selecting number of clusters\n\nUse `cutree()` to cut the tree so that it has 4 clusters. Assign the output to the variable `wisc.hclust.clusters`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwisc.hclust.clusters <- cutree(wisc.hclust, h=19)\n```\n:::\n\n\nWe can use the `table()` function to compare the cluster membership to the actual diagnoses.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(wisc.hclust.clusters, diagnosis)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    diagnosis\nwisc.hclust.clusters   B   M\n                   1  12 165\n                   2   2   5\n                   3 343  40\n                   4   0   2\n```\n:::\n:::\n\n\n#### Using different methods\n\n-   **Q12.** Which method gives your favorite results for the same `data.dist` dataset? Explain your reasoning.\n\nThe \"complete\" method gave the same results as data.dist dataset because the clusters are clearer.\n\n#### Combining methods\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwisc.pr.hclust <- hclust(data.dist, method =\"ward.D2\" )\ngrps <- cutree(wisc.pr.hclust, k=2)\ntable(grps)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ngrps\n  1   2 \n184 385 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(grps, diagnosis)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    diagnosis\ngrps   B   M\n   1  20 164\n   2 337  48\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(wisc.pr$x[,1:2], col=grps)\n```\n\n::: {.cell-output-display}\n![](class08_files/figure-pdf/unnamed-chunk-21-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(wisc.pr$x[,1:2], col=as.factor(diagnosis))\n```\n\n::: {.cell-output-display}\n![](class08_files/figure-pdf/unnamed-chunk-22-1.pdf){fig-pos='H'}\n:::\n:::\n\n\nUse the distance along the first 7 PCs for clustering i.e. wisc.pr\\$x\\[, 1:7\\]\n\n-   **Q13**. How well does the newly created model with four clusters separate out the two diagnoses?\n\nIt identifies groups of similar objects in the dataset with different variable quantities.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwisc.pr.hclust <- hclust(dist(wisc.pr$x[, 1:7]), method = \"ward.D2\")\nwisc.pr.hclust\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nhclust(d = dist(wisc.pr$x[, 1:7]), method = \"ward.D2\")\n\nCluster method   : ward.D2 \nDistance         : euclidean \nNumber of objects: 569 \n```\n:::\n:::\n\n\n-   **Q14**. How well do the hierarchical clustering models you created in previous sections (i.e.Â before PCA) do in terms of separating the diagnoses? Again, use the `table()` function to compare the output of each model (`wisc.km$cluster` and `wisc.hclust.clusters`) with the vector containing the actual diagnoses.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)\n\n# Compare to actual diagnoses\ntable(wisc.hclust.clusters, diagnosis)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    diagnosis\nwisc.hclust.clusters   B   M\n                   1  12 165\n                   2   2   5\n                   3 343  40\n                   4   0   2\n```\n:::\n\n```{.r .cell-code}\nwisc.km<-kmeans(scale(wisc.data), centers = 2, nstart = 20)\ntable(wisc.km$cluster, diagnosis)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   diagnosis\n      B   M\n  1  14 175\n  2 343  37\n```\n:::\n\n```{.r .cell-code}\ntable(wisc.km$cluster,wisc.pr.hclust.clusters)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   wisc.pr.hclust.clusters\n      1   2\n  1 188   1\n  2  28 352\n```\n:::\n:::\n\n\n#### Prediction\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#url <- \"new_samples.csv\"\nurl <- \"https://tinyurl.com/new-samples-CSV\"\nnew <- read.csv(url)\nnpc <- predict(wisc.pr, newdata=new)\nnpc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           PC1       PC2        PC3        PC4       PC5        PC6        PC7\n[1,]  2.576616 -3.135913  1.3990492 -0.7631950  2.781648 -0.8150185 -0.3959098\n[2,] -4.754928 -3.009033 -0.1660946 -0.6052952 -1.140698 -1.2189945  0.8193031\n            PC8       PC9       PC10      PC11      PC12      PC13     PC14\n[1,] -0.2307350 0.1029569 -0.9272861 0.3411457  0.375921 0.1610764 1.187882\n[2,] -0.3307423 0.5281896 -0.4855301 0.7173233 -1.185917 0.5893856 0.303029\n          PC15       PC16        PC17        PC18        PC19       PC20\n[1,] 0.3216974 -0.1743616 -0.07875393 -0.11207028 -0.08802955 -0.2495216\n[2,] 0.1299153  0.1448061 -0.40509706  0.06565549  0.25591230 -0.4289500\n           PC21       PC22       PC23       PC24        PC25         PC26\n[1,]  0.1228233 0.09358453 0.08347651  0.1223396  0.02124121  0.078884581\n[2,] -0.1224776 0.01732146 0.06316631 -0.2338618 -0.20755948 -0.009833238\n             PC27        PC28         PC29         PC30\n[1,]  0.220199544 -0.02946023 -0.015620933  0.005269029\n[2,] -0.001134152  0.09638361  0.002795349 -0.019015820\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(wisc.pr$x[,1:2], col=as.factor(diagnosis))\npoints(npc[,1], npc[,2], col=\"blue\", pch=16, cex=3)\ntext(npc[,1], npc[,2], c(1,2), col=\"white\")\n```\n\n::: {.cell-output-display}\n![](class08_files/figure-pdf/unnamed-chunk-26-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n-   **Q16.** Which of these new patients should we prioritize for follow up based on your results?\n\nPatient 2 should prioritize for follow up based on the results above.\n",
    "supporting": [
      "class08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}